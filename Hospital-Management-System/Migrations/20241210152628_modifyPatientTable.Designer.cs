// <auto-generated />
using System;
using Hospital_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospital_Management_System.Migrations
{
    [DbContext(typeof(HospitalDBContext))]
    [Migration("20241210152628_modifyPatientTable")]
    partial class modifyPatientTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hospital_Management_System.Data.Appointment", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentID"));

                    b.Property<byte>("AppointmentStatus")
                        .HasColumnType("tinyint");

                    b.Property<DateOnly>("DateTime")
                        .HasColumnType("date");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("MedicalRecordID")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentID")
                        .HasColumnType("int");

                    b.HasKey("AppointmentID");

                    b.HasIndex("DoctorId");

                    b.HasIndex("MedicalRecordID");

                    b.HasIndex("PatientId");

                    b.HasIndex("PaymentID");

                    b.ToTable("Appointment", (string)null);
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DoctorId");

                    b.HasIndex("PersonId");

                    b.ToTable("Doctor", (string)null);

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            PersonId = 1,
                            Specialization = "Cardiologist"
                        },
                        new
                        {
                            DoctorId = 2,
                            PersonId = 2,
                            Specialization = "Neurologist"
                        },
                        new
                        {
                            DoctorId = 3,
                            PersonId = 3,
                            Specialization = "Pediatrician"
                        });
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Medical_Record", b =>
                {
                    b.Property<int>("MedicalRecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalRecordID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MedicalRecordID");

                    b.ToTable("Medical_Record", (string)null);

                    b.HasData(
                        new
                        {
                            MedicalRecordID = 1,
                            Description = "Bed rest",
                            Diagnosis = "ABC",
                            Notes = "GHI"
                        },
                        new
                        {
                            MedicalRecordID = 2,
                            Description = "walk early morning",
                            Diagnosis = "DEF",
                            Notes = "DEF"
                        },
                        new
                        {
                            MedicalRecordID = 3,
                            Description = "dont take stress",
                            Diagnosis = "GHI",
                            Notes = "ABC"
                        });
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("PatientId");

                    b.HasIndex("PersonId");

                    b.ToTable("Patients", (string)null);
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PaymentID");

                    b.HasIndex("PatientId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Prescriptions", b =>
                {
                    b.Property<int>("PrescriptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescriptionID"));

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MedicalRecordID")
                        .HasColumnType("int");

                    b.Property<string>("MedicationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("PrescriptionID");

                    b.HasIndex("MedicalRecordID");

                    b.ToTable("Prescriptions", (string)null);
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Appointment", b =>
                {
                    b.HasOne("Hospital_Management_System.Data.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Appointment_Doctor_DoctorId");

                    b.HasOne("Hospital_Management_System.Data.Medical_Record", "MedicalRecord")
                        .WithMany("Appointments")
                        .HasForeignKey("MedicalRecordID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Appointment_MedicalRecord_MedicalRecordId");

                    b.HasOne("Hospital_Management_System.Data.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Appointment_Patient_PatientId");

                    b.HasOne("Hospital_Management_System.Data.Payment", "Payment")
                        .WithMany("Appointments")
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Appointment_Payment_PaymentId");

                    b.Navigation("Doctor");

                    b.Navigation("MedicalRecord");

                    b.Navigation("Patient");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Doctor", b =>
                {
                    b.HasOne("Hospital_Management_System.Data.Person", "Person")
                        .WithMany("Doctors")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Doctor_Person_PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Patient", b =>
                {
                    b.HasOne("Hospital_Management_System.Data.Person", "Person")
                        .WithMany("Patients")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Patient_Person_PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Payment", b =>
                {
                    b.HasOne("Hospital_Management_System.Data.Patient", "Patient")
                        .WithMany("Payment")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Prescriptions", b =>
                {
                    b.HasOne("Hospital_Management_System.Data.Medical_Record", "MedicalRecord")
                        .WithMany("Prescriptions")
                        .HasForeignKey("MedicalRecordID");

                    b.Navigation("MedicalRecord");
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Medical_Record", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Patient", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Payment", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Hospital_Management_System.Data.Person", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
